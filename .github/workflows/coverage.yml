name: Coverage Report

on:
  push:
    branches: [main]
  schedule:
    # Run weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'

jobs:
  coverage:
    name: Full Coverage Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run all unit tests with coverage
        run: |
          pytest tests/ \
            -m "unit" \
            --cov=src/pyecod_mini \
            --cov-report=xml \
            --cov-report=html \
            --cov-report=term-missing \
            -v

      - name: Generate coverage badge
        run: |
          coverage report | tee coverage.txt
          COVERAGE=$(coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')
          echo "Coverage: $COVERAGE%"

          # Create badge JSON
          if [ $(echo "$COVERAGE >= 90" | bc) -eq 1 ]; then
            COLOR="brightgreen"
          elif [ $(echo "$COVERAGE >= 80" | bc) -eq 1 ]; then
            COLOR="green"
          elif [ $(echo "$COVERAGE >= 70" | bc) -eq 1 ]; then
            COLOR="yellow"
          else
            COLOR="red"
          fi

          echo "Badge color: $COLOR"

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: comprehensive
          name: full-coverage

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-full
          path: htmlcov/
          retention-days: 30

      - name: Coverage summary
        run: |
          echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          coverage report >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Check coverage threshold
        run: |
          coverage report --fail-under=80
          if [ $? -eq 0 ]; then
            echo "✅ Coverage meets 80% threshold"
          else
            echo "❌ Coverage below 80% threshold"
            exit 1
          fi
